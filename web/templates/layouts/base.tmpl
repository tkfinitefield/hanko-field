{{ define "base" }}
<!doctype html>
<html lang="{{ $.Lang }}">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>{{ if .SEO.Title }}{{ .SEO.Title }}{{ else if .Title }}{{ .Title }}{{ else }}{{ tlang $.Lang "brand.name" }}{{ end }}</title>
    {{ template "head" . }}
    <link rel="stylesheet" href="/assets/app.css">
  </head>
  <body class="min-h-screen bg-gray-50 text-gray-900">
    <header class="border-b bg-white">
      <div class="mx-auto max-w-5xl px-4 py-4 flex items-center justify-between">
        <div class="flex items-center gap-3">
          <button id="menu-toggle" type="button" class="md:hidden inline-flex items-center justify-center rounded-md p-2 text-gray-600 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-600" aria-controls="mobile-menu" aria-expanded="false" aria-label="{{ tlang $.Lang "nav.menu" }}">
            <svg class="h-6 w-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
              <line x1="3" y1="6" x2="21" y2="6" />
              <line x1="3" y1="12" x2="21" y2="12" />
              <line x1="3" y1="18" x2="21" y2="18" />
            </svg>
          </button>
          <a href="/" class="font-semibold text-xl">{{ tlang $.Lang "brand.name" }}</a>
        </div>
        <nav class="hidden md:flex items-center gap-6 text-sm" aria-label="Primary">
          {{ range .Nav }}
          <a href="{{ .Href }}" class="hover:underline {{ if .Active }}text-indigo-600 font-medium underline{{ end }}">{{ tlang $.Lang .LabelKey }}</a>
          {{ end }}
        </nav>
        <div class="flex items-center gap-3">
          <a href="/notifications" class="hidden md:inline-flex items-center justify-center rounded-full p-2 text-gray-600 hover:bg-gray-100" aria-label="{{ tlang $.Lang "nav.notifications" }}">
            <svg class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
              <path d="M18 8a6 6 0 10-12 0c0 7-3 7-3 7h18s-3 0-3-7" />
              <path d="M13.73 21a2 2 0 01-3.46 0" />
            </svg>
          </a>
          <a href="/cart" class="hidden md:inline-flex items-center justify-center rounded-full p-2 text-gray-600 hover:bg-gray-100" aria-label="{{ tlang $.Lang "nav.cart" }}">
            <svg class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
              <circle cx="9" cy="21" r="1" />
              <circle cx="20" cy="21" r="1" />
              <path d="M1 1h4l2.68 12.39a2 2 0 002 1.61h9.72a2 2 0 001.98-1.66L23 6H6" />
            </svg>
          </a>
          <div class="hidden md:flex items-center gap-1 text-xs">
            <a href="?hl=ja" class="px-2 py-1 rounded hover:bg-gray-100 {{ if eq $.Lang "ja" }}bg-gray-100 font-medium{{ end }}">{{ tlang $.Lang "nav.lang.ja" }}</a>
            <span class="text-gray-300">|</span>
            <a href="?hl=en" class="px-2 py-1 rounded hover:bg-gray-100 {{ if eq $.Lang "en" }}bg-gray-100 font-medium{{ end }}">{{ tlang $.Lang "nav.lang.en" }}</a>
          </div>
        </div>
      </div>
      <!-- Mobile menu -->
      <div id="mobile-menu" class="md:hidden hidden border-t bg-white" tabindex="-1" aria-hidden="true">
        <div class="mx-auto max-w-5xl px-4 py-3 space-y-2">
          {{ range .Nav }}
          <a href="{{ .Href }}" class="block py-2 text-sm hover:underline {{ if .Active }}text-indigo-600 font-medium underline{{ end }}">{{ tlang $.Lang .LabelKey }}</a>
          {{ end }}
          <div class="pt-2 flex items-center gap-3">
            <a href="/notifications" class="inline-flex items-center gap-2 rounded px-2 py-1 text-sm text-gray-600 hover:bg-gray-100" aria-label="{{ tlang $.Lang "nav.notifications" }}">
              <svg class="h-4 w-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
                <path d="M18 8a6 6 0 10-12 0c0 7-3 7-3 7h18s-3 0-3-7" />
                <path d="M13.73 21a2 2 0 01-3.46 0" />
              </svg>
              <span>{{ tlang $.Lang "nav.notifications" }}</span>
            </a>
            <a href="/cart" class="inline-flex items-center gap-2 rounded px-2 py-1 text-sm text-gray-600 hover:bg-gray-100" aria-label="{{ tlang $.Lang "nav.cart" }}">
              <svg class="h-4 w-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
                <circle cx="9" cy="21" r="1" />
                <circle cx="20" cy="21" r="1" />
                <path d="M1 1h4l2.68 12.39a2 2 0 002 1.61h9.72a2 2 0 001.98-1.66L23 6H6" />
              </svg>
              <span>{{ tlang $.Lang "nav.cart" }}</span>
            </a>
          </div>
          <div class="pt-2 flex items-center gap-2 text-xs">
            <span class="text-gray-500">Lang:</span>
            <a href="?hl=ja" class="px-2 py-1 rounded hover:bg-gray-100 {{ if eq $.Lang "ja" }}bg-gray-100 font-medium{{ end }}">{{ tlang $.Lang "nav.lang.ja" }}</a>
            <a href="?hl=en" class="px-2 py-1 rounded hover:bg-gray-100 {{ if eq $.Lang "en" }}bg-gray-100 font-medium{{ end }}">{{ tlang $.Lang "nav.lang.en" }}</a>
          </div>
        </div>
      </div>
    </header>
    <main id="main" class="mx-auto max-w-5xl px-4 py-10">
      {{ if gt (len .Breadcrumbs) 1 }}
      <nav aria-label="Breadcrumb" class="mb-6 text-sm">
        <ol class="flex items-center gap-2 text-gray-600">
          {{ range .Breadcrumbs }}
            <li class="flex items-center gap-2">
              {{ if .Active }}
                <span class="text-gray-900 font-medium">{{ if .LabelKey }}{{ tlang $.Lang .LabelKey }}{{ else }}{{ .Label }}{{ end }}</span>
              {{ else }}
                <a href="{{ .Href }}" class="hover:underline">{{ if .LabelKey }}{{ tlang $.Lang .LabelKey }}{{ else }}{{ .Label }}{{ end }}</a>
                <span class="text-gray-300">/</span>
              {{ end }}
            </li>
          {{ end }}
        </ol>
      </nav>
      {{ end }}
      {{ block "content" . }}{{ end }}
    </main>
    <footer class="mt-16 border-t bg-white">
      <div class="mx-auto max-w-5xl px-4 py-8 text-sm text-gray-600">
        <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
          <div class="text-gray-500">Â© <span>{{ nowf "2006" }}</span> Finite Field</div>
          <nav class="flex items-center gap-4">
            <a href="/terms" class="hover:underline">Terms</a>
            <a href="/privacy" class="hover:underline">Privacy</a>
            <a href="/contact" class="hover:underline">Contact</a>
            <a href="https://twitter.com" target="_blank" rel="noopener" class="hover:underline">Twitter</a>
          </nav>
        </div>
      </div>
    </footer>
    <!-- Modal mount point (for HTMX swaps or client JS) -->
    <div id="modal-root" class="relative z-50"></div>
    <script src="/assets/js/htmx.min.js"></script>
    <script>
      (function(){
        function getCookie(name){
          const m = document.cookie.match(new RegExp('(?:^|; )' + name.replace(/([.$?*|{}()\[\]\\\/\+^])/g, '\\$1') + '=([^;]*)'));
          return m ? decodeURIComponent(m[1]) : '';
        }
        document.addEventListener('htmx:configRequest', function(e){
          var token = getCookie('csrf_token');
          if (token) { e.detail.headers['X-CSRF-Token'] = token; }
        });
        // Mobile menu toggle
        var btn = document.getElementById('menu-toggle');
        var menu = document.getElementById('mobile-menu');
        var lastFocus = null;
        function getFocusable(container){
          return container.querySelectorAll('a, button, [tabindex]:not([tabindex="-1"])');
        }
        function openMenu(){
          if (!menu) return;
          menu.classList.remove('hidden');
          menu.setAttribute('aria-hidden','false');
          lastFocus = document.activeElement;
          var f = getFocusable(menu);
          if (f.length) { f[0].focus(); }
          document.addEventListener('keydown', trap, true);
        }
        function closeMenu(){
          if (!menu) return;
          menu.classList.add('hidden');
          menu.setAttribute('aria-hidden','true');
          document.removeEventListener('keydown', trap, true);
          if (lastFocus && lastFocus.focus) { lastFocus.focus(); }
        }
        function trap(e){
          if (e.key === 'Escape'){ e.preventDefault(); closeMenu(); btn.setAttribute('aria-expanded','false'); return; }
          if (e.key !== 'Tab') return;
          var focusables = Array.prototype.slice.call(getFocusable(menu));
          if (!focusables.length) return;
          var idx = focusables.indexOf(document.activeElement);
          if (e.shiftKey) {
            if (idx <= 0) { focusables[focusables.length - 1].focus(); e.preventDefault(); }
          } else {
            if (idx === focusables.length - 1) { focusables[0].focus(); e.preventDefault(); }
          }
        }
        if (btn && menu) {
          btn.addEventListener('click', function(){
            var expanded = btn.getAttribute('aria-expanded') === 'true';
            btn.setAttribute('aria-expanded', (!expanded).toString());
            if (expanded) { closeMenu(); } else { openMenu(); }
          });
        }
      })();
    </script>
    <script>
      (function(){
        var modalRoot = document.getElementById('modal-root');
        if (!modalRoot) return;
        var lastFocus = null;
        function getFocusable(container){
          return container.querySelectorAll('a, button, input, textarea, select, [tabindex]:not([tabindex="-1"])');
        }
        function focusFirst(){
          var modal = modalRoot.querySelector('[data-modal-container]');
          if (!modal) return;
          var f = getFocusable(modal);
          if (f.length) { f[0].focus(); }
        }
        function closeModal(){
          modalRoot.innerHTML = '';
          document.body.classList.remove('overflow-hidden');
          if (lastFocus && lastFocus.focus) { try { lastFocus.focus(); } catch(_){} }
          document.removeEventListener('keydown', trap, true);
        }
        function trap(e){
          // ESC closes
          if (e.key === 'Escape') { e.preventDefault(); closeModal(); return; }
          if (e.key !== 'Tab') return;
          var modal = modalRoot.querySelector('[data-modal-container]');
          if (!modal) return;
          var focusables = Array.prototype.slice.call(getFocusable(modal));
          if (!focusables.length) return;
          var idx = focusables.indexOf(document.activeElement);
          if (e.shiftKey) {
            if (idx <= 0) { focusables[focusables.length - 1].focus(); e.preventDefault(); }
          } else {
            if (idx === focusables.length - 1) { focusables[0].focus(); e.preventDefault(); }
          }
        }
        // Open on swap into modal-root
        document.body.addEventListener('htmx:afterSwap', function(e){
          if (e.target !== modalRoot) return;
          lastFocus = document.activeElement;
          document.body.classList.add('overflow-hidden');
          focusFirst();
          document.addEventListener('keydown', trap, true);
        });
        // Delegated clicks
        modalRoot.addEventListener('click', function(e){
          var t = e.target;
          if (t.closest('[data-modal-close]')) { e.preventDefault(); closeModal(); return; }
          if (t.closest('[data-modal-overlay]')) { e.preventDefault(); closeModal(); return; }
        });
        // Expose for custom usage if needed
        window.hankoModalClose = closeModal;
      })();
    </script>
    {{ template "analytics_body" . }}
  </body>
</html>
{{ end }}
